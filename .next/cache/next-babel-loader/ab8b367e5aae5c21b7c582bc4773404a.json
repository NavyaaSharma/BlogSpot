{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Layout from '../../../components/Layout';\nimport { forgotPassword } from '../../../actions/auth';\n\nconst ForgotPassword = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    email: '',\n    message: '',\n    error: '',\n    showForm: true\n  });\n  const {\n    email,\n    message,\n    error,\n    showForm\n  } = values;\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      message: '',\n      error: '',\n      [name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      message: '',\n      error: ''\n    }));\n    forgotPassword({\n      email\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          message: data.message,\n          email: '',\n          showForm: false\n        }));\n      }\n    });\n  };\n\n  const showError = () => error ? __jsx(\"div\", {\n    className: \"alert alert-danger\"\n  }, error) : '';\n\n  const showMessage = () => message ? __jsx(\"div\", {\n    className: \"alert alert-success\"\n  }, message) : '';\n\n  const passwordForgotForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group pt-5\"\n  }, __jsx(\"input\", {\n    type: \"email\",\n    onChange: handleChange('email'),\n    className: \"form-control\",\n    value: email,\n    placeholder: \"Type your email\",\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"button\", {\n    className: \"btn btn-primary\"\n  }, \"Send password reset link\")));\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content2\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", null, \"Forgot password\"), showError(), showMessage(), showForm && passwordForgotForm())));\n};\n\nexport default ForgotPassword;","map":null,"metadata":{},"sourceType":"module"}