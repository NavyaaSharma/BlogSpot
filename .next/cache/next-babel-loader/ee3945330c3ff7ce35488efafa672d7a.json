{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Navyaa Sharma\\\\Documents\\\\MyProjects\\\\seo blog\\\\frontend\\\\components\\\\crud\\\\BlogList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\n\nconst BlogRead = ({\n  username\n}) => {\n  const {\n    0: blogs,\n    1: setBlogs\n  } = useState([]);\n  const token = getCookie('token');\n  useEffect(() => {\n    loadBlogs();\n  }, []);\n\n  const loadBlogs = () => {\n    list(usern).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setBlogs(data);\n      }\n    });\n  };\n\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => {\n      var check = \"\";\n      if (blog.isPublished == false) check = \"Blog will be published after the admin reviews and publishes it\";else check = \"Published on \" + moment(blog.updatedAt).fromNow();\n      return __jsx(\"div\", {\n        key: i,\n        className: \"pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, blog.title), __jsx(\"p\", {\n        className: \"mark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"Written by \", blog.postedBy.name, \" | \", check));\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, showAllBlogs())));\n};\n\nexport default BlogRead;","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/components/crud/BlogList.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","list","removeBlog","moment","BlogRead","username","blogs","setBlogs","token","loadBlogs","usern","then","data","console","log","error","showAllBlogs","map","blog","i","check","isPublished","updatedAt","fromNow","title","postedBy","name"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,oBAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,KAAK,GAAGT,SAAS,CAAC,OAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,MAAM;AACpBR,IAAAA,IAAI,CAACS,KAAD,CAAJ,CAAYC,IAAZ,CAAiBC,IAAI,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAACG,KAAT,EAAgB;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACH,OAFD,MAEO;AACHR,QAAAA,QAAQ,CAACK,IAAD,CAAR;AACH;AACJ,KAPD;AAQH,GATD;;AAYA,QAAMI,YAAY,GAAG,MAAM;AACvB,WAAOV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1B,UAAIC,KAAK,GAAC,EAAV;AACA,UAAGF,IAAI,CAACG,WAAL,IAAkB,KAArB,EACID,KAAK,GAAC,iEAAN,CADJ,KAGIA,KAAK,GAAC,kBAAgBjB,MAAM,CAACe,IAAI,CAACI,SAAN,CAAN,CAAuBC,OAAvB,EAAtB;AACJ,aACI;AAAK,QAAA,GAAG,EAAEJ,CAAV;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACM,KAAV,CADJ,EAEI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgBN,IAAI,CAACO,QAAL,CAAcC,IAD9B,SACuCN,KADvC,CAFJ,CADJ;AAQH,KAdM,CAAP;AAeH,GAhBD;;AAkBA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YAAY,EADjB,CADJ,CADJ,CADJ;AASH,CA/CD;;AAiDA,eAAeZ,QAAf","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport { getCookie, isAuth } from '../../actions/auth';\r\nimport { list, removeBlog } from '../../actions/blog';\r\nimport moment from 'moment';\r\n\r\nconst BlogRead = ({ username }) => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadBlogs();\r\n    }, []);\r\n\r\n    const loadBlogs = () => {\r\n        list(usern).then(data => {\r\n            console.log(data)\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setBlogs(data);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const showAllBlogs = () => {\r\n        return blogs.map((blog, i) => {\r\n            var check=\"\"\r\n            if(blog.isPublished==false)\r\n                check=\"Blog will be published after the admin reviews and publishes it\"\r\n            else\r\n                check=\"Published on \"+moment(blog.updatedAt).fromNow()\r\n            return (\r\n                <div key={i} className=\"pb-5\">\r\n                    <h3>{blog.title}</h3>\r\n                    <p className=\"mark\">\r\n                        Written by {blog.postedBy.name} | {check}\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    {showAllBlogs()}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default BlogRead;"]},"metadata":{},"sourceType":"module"}