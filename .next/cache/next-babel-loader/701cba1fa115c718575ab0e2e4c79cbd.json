{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var createBlog = function createBlog(blog, token) {\n  return fetch(\"\".concat(API, \"/blog\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json' // 'Content-type':'application/json'\n\n    },\n    body: JSON.stringify(data)\n  }).then(function (result) {\n    result.json().then(function (response) {\n      con;\n      return response;\n    });\n  });\n};\nexport var singleBlog = function singleBlog(slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response;\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/actions/blog.js"],"names":["fetch","API","createBlog","blog","token","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","JSON","stringify","result","con","singleBlog","slug"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,OAAO,IAAMC,UAAU,GAAC,SAAXA,UAAW,CAACC,IAAD,EAAMC,KAAN,EAAc;AAClC,SAAOJ,KAAK,WAAIC,GAAJ,YAAe;AACvBI,IAAAA,MAAM,EAAC,MADgB;AAEvBC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJC,MAAAA,aAAa,mBAAWJ,KAAX;AAFT,KAFe;AAMvBK,IAAAA,IAAI,EAACN;AANkB,GAAf,CAAL,CAOJO,IAPI,CAOC,UAACC,QAAD,EAAY;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GATM,WASE,UAACC,GAAD,EAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAXM,CAAP;AAaH,CAdM;AAgBP,OAAO,IAAMG,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3D,MAAMC,IAAI,GAAG;AACTD,IAAAA,KAAK,EAALA,KADS;AAETD,IAAAA,IAAI,EAAJA;AAFS,GAAb;AAIA,SAAOjB,KAAK,WAAIC,GAAJ,6BAAiC;AACzCI,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH,CAEL;;AAFK,KAFgC;AAMzCE,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeF,IAAf;AANmC,GAAjC,CAAL,CAQNT,IARM,CAQD,UAAAY,MAAM,EAAE;AACVA,IAAAA,MAAM,CAACV,IAAP,GAAcF,IAAd,CAAmB,UAAAC,QAAQ,EAAI;AAC3BY,MAAAA,GAAG;AACH,aAAOZ,QAAP;AAAiB,KAFrB;AAGH,GAZM,CAAP;AAaH,CAlBM;AAoBP,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AAC9B,SAAOzB,KAAK,WAAIC,GAAJ,mBAAgBwB,IAAhB,GAAwB;AAChCpB,IAAAA,MAAM,EAAE;AADwB,GAAxB,CAAL,CAGFK,IAHE,CAGG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAP;AACH,GALE,WAMI,UAAAE,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GANP,CAAP;AAOH,CARM","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {API} from '../config'\r\n\r\nexport const createBlog=(blog,token)=>{\r\n    return fetch(`${API}/blog`,{\r\n        method:'POST',\r\n        headers:{\r\n            Accept:'application/json',\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body:blog\r\n    }).then((response)=>{\r\n        return response.json()\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n    \r\n}\r\n\r\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\r\n    const data = {\r\n        limit,\r\n        skip\r\n    };\r\n    return fetch(`${API}/blogs-categories-tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            // 'Content-type':'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    .then(result=>{\r\n        result.json().then(response => {\r\n            con\r\n            return response })\r\n    })\r\n};\r\n\r\nexport const singleBlog = slug => {\r\n    return fetch(`${API}/blog/${slug}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}