{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Navyaa Sharma\\\\Documents\\\\MyProjects\\\\seo blog\\\\frontend\\\\components\\\\crud\\\\BlogPublish.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog, publish } from '../../actions/blog';\nimport moment from 'moment';\n\nconst BlogRead = ({\n  username\n}) => {\n  const {\n    0: blogs,\n    1: setBlogs\n  } = useState([]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const token = getCookie('token');\n  useEffect(() => {\n    loadBlogs();\n  }, []);\n\n  const loadBlogs = () => {\n    list(username).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setBlogs(data);\n      }\n    });\n  };\n\n  const deleteBlog = slug => {\n    removeBlog(slug, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setMessage(data.message);\n        loadBlogs();\n      }\n    });\n  };\n\n  const deleteConfirm = slug => {\n    let answer = window.confirm('Are you sure you want to delete your blog?');\n\n    if (answer) {\n      deleteBlog(slug);\n    }\n  };\n\n  const publishBlog = id => {\n    publish(id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setMessage(data.message);\n        loadBlogs();\n      }\n    });\n  };\n\n  const publishConfirm = slug => {\n    let answer = window.confirm('Are you sure you want to  your blog?');\n\n    if (answer) {\n      publishBlog(slug);\n    }\n  };\n\n  const showUpdateButton = blog => {\n    if (isAuth() && isAuth().role === 0) {\n      return __jsx(Link, {\n        href: `/user/crud/${blog.slug}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        className: \"ml-2 btn btn-sm btn-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \"Update\"));\n    } else if (isAuth() && isAuth().role === 1) {\n      return __jsx(Link, {\n        href: `/admin/crud/${blog.slug}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        className: \"ml-2 btn btn-sm btn-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"Make Changes\"));\n    }\n  };\n\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => {\n      var check = \"\";\n\n      if (blog.isPublished == false) {\n        check = \"Blog will be published after the admin reviews and publishes it\";\n        return __jsx(\"div\", {\n          key: i,\n          className: \"pb-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }, blog.title), __jsx(\"p\", {\n          className: \"mark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        }, \"Written by \", blog.postedBy.name, \" | \", check), __jsx(\"button\", {\n          className: \" btn btn-sm btn-success\",\n          onClick: () => publishConfirm(blog._id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }, \"Publish\"), __jsx(\"button\", {\n          className: \"ml-2 btn btn-sm btn-danger\",\n          onClick: () => deleteConfirm(blog.slug),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }\n        }, \"Reject\"), showUpdateButton(blog));\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, message && __jsx(\"div\", {\n    className: \"alert alert-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, message), showAllBlogs())));\n};\n\nexport default BlogRead;","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/components/crud/BlogPublish.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","list","removeBlog","publish","moment","BlogRead","username","blogs","setBlogs","message","setMessage","token","loadBlogs","then","data","console","log","error","deleteBlog","slug","deleteConfirm","answer","window","confirm","publishBlog","id","publishConfirm","showUpdateButton","blog","role","showAllBlogs","map","i","check","isPublished","title","postedBy","name","_id"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport { getCookie, isAuth } from '../../actions/auth';\r\nimport { list, removeBlog, publish } from '../../actions/blog';\r\nimport moment from 'moment';\r\n\r\nconst BlogRead = ({ username }) => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadBlogs();\r\n    }, []);\r\n\r\n    const loadBlogs = () => {\r\n        list(username).then(data => {\r\n            console.log(data)\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setBlogs(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteBlog = slug => {\r\n        removeBlog(slug, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setMessage(data.message);\r\n                loadBlogs();\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteConfirm = slug => {\r\n        let answer = window.confirm('Are you sure you want to delete your blog?');\r\n        if (answer) {\r\n            deleteBlog(slug);\r\n        }\r\n    };\r\n\r\n    const publishBlog = id => {\r\n        publish(id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setMessage(data.message);\r\n                loadBlogs();\r\n            }\r\n        });\r\n    };\r\n\r\n    const publishConfirm = slug => {\r\n        let answer = window.confirm('Are you sure you want to  your blog?');\r\n        if (answer) {\r\n            publishBlog(slug);\r\n        }\r\n    };\r\n\r\n    const showUpdateButton = blog => {\r\n        if (isAuth() && isAuth().role === 0) {\r\n            return (\r\n                <Link href={`/user/crud/${blog.slug}`}>\r\n                    <a className=\"ml-2 btn btn-sm btn-warning\">Update</a>\r\n                </Link>\r\n            );\r\n        } else if (isAuth() && isAuth().role === 1) {\r\n            return (\r\n                <Link href={`/admin/crud/${blog.slug}`}>\r\n                    <a className=\"ml-2 btn btn-sm btn-warning\">Make Changes</a>\r\n                </Link>\r\n            );\r\n        }\r\n    };\r\n\r\n    const showAllBlogs = () => {\r\n        return blogs.map((blog, i) => {\r\n            var check=\"\"\r\n            if(blog.isPublished==false)\r\n            {\r\n                check=\"Blog will be published after the admin reviews and publishes it\"\r\n                return (\r\n                    <div key={i} className=\"pb-5\">\r\n                        <h3>{blog.title}</h3>\r\n                        <p className=\"mark\">\r\n                            Written by {blog.postedBy.name} | {check}\r\n                        </p>\r\n                        <button className=\" btn btn-sm btn-success\" onClick={() => publishConfirm(blog._id)}>\r\n                            Publish\r\n                        </button>\r\n                        <button className=\"ml-2 btn btn-sm btn-danger\" onClick={() => deleteConfirm(blog.slug)}>\r\n                            Reject\r\n                        </button>\r\n                        {showUpdateButton(blog)}\r\n                    </div>\r\n                );\r\n            }\r\n           \r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    {message && <div className=\"alert alert-primary\">{message}</div>}\r\n                    {showAllBlogs()}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default BlogRead;"]},"metadata":{},"sourceType":"module"}