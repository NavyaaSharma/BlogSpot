{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Navyaa Sharma\\\\Documents\\\\MyProjects\\\\seo blog\\\\frontend\\\\components\\\\auth\\\\ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\nimport { API } from '../../config';\nimport '../../static/css/style.css';\n\nconst ProfileUpdate = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    username: '',\n    name: '',\n    email: '',\n    about: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: ''\n  });\n  const token = getCookie('token');\n  const {\n    username,\n    name,\n    email,\n    about,\n    password,\n    error,\n    success,\n    loading,\n    photo,\n    userData\n  } = values;\n\n  const init = () => {\n    getProfile(token).then(response => {\n      console.log(response);\n      response.json().then(data => {\n        console.log({\n          username: data.message.username,\n          name: data.message.name,\n          email: data.message.email,\n          about: data.message.about\n        });\n\n        if (data.error) {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            error: data.error\n          }));\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            username: data.message.username,\n            name: data.message.name,\n            email: data.message.email,\n            about: data.message.about\n          }));\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const handleChange = name => e => {\n    // console.log(e.target.value);\n    const value = name === 'photo' ? e.target.files[0] : e.target.value;\n    let userFormData = new FormData();\n    userFormData.set(name, value);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value,\n      userData: userFormData,\n      error: false,\n      success: false\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    update(token, userData).then(response => {\n      console.log(response);\n      response.json().then(data => {\n        if (data.error) {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            error: data.error,\n            success: false,\n            loading: false\n          }));\n        } else {\n          updateUser(data, () => {\n            setValues(_objectSpread(_objectSpread({}, values), {}, {\n              username: data.username,\n              name: data.name,\n              email: data.email,\n              about: data.about,\n              password: '',\n              success: true,\n              loading: false\n            }));\n          });\n        }\n      });\n    });\n  };\n\n  var localuname = loa;\n\n  const profileUpdateForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"btn btn-outline-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Profile photo\", __jsx(\"input\", {\n    onChange: handleChange('photo'),\n    type: \"file\",\n    accept: \"image/*\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    onChange: handleChange('username'),\n    type: \"text\",\n    value: username,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    onChange: handleChange('name'),\n    type: \"text\",\n    value: name,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    onChange: handleChange('email'),\n    type: \"text\",\n    value: email,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"About\"), __jsx(\"textarea\", {\n    onChange: handleChange('about'),\n    type: \"text\",\n    value: about,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    onChange: handleChange('password'),\n    type: \"password\",\n    value: password,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n\n  const showError = () => __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, error);\n\n  const showSuccess = () => __jsx(\"div\", {\n    className: \"alert alert-success\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Profile updated\");\n\n  const showLoading = () => __jsx(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: loading ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Loading...\");\n\n  return __jsx(\"div\", {\n    className: \"content \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: `${API}/user/photo/${username}`,\n    className: \"img img-fluid img-thumbnail mb-3\",\n    style: {\n      maxHeight: 'auto',\n      maxWidth: '100%'\n    },\n    alt: \"user profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"col-md-8 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, showSuccess(), showError(), showLoading(), profileUpdateForm())))));\n};\n\nexport default ProfileUpdate;","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/components/auth/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","updateUser","getProfile","update","API","ProfileUpdate","values","setValues","username","name","email","about","password","error","success","loading","photo","userData","token","init","then","response","console","log","json","data","message","handleChange","e","value","target","files","userFormData","FormData","set","handleSubmit","preventDefault","localuname","loa","profileUpdateForm","showError","display","showSuccess","showLoading","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\r\nimport { getProfile, update } from '../../actions/user';\r\nimport { API } from '../../config';\r\nimport '../../static/css/style.css'\r\n\r\nconst ProfileUpdate = () => {\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        name: '',\r\n        email: '',\r\n        about: '',\r\n        password: '',\r\n        error: false,\r\n        success: false,\r\n        loading: false,\r\n        photo: '',\r\n        userData: ''\r\n    });\r\n\r\n    const token = getCookie('token');\r\n    const { username, name, email, about, password, error, success, loading, photo, userData } = values;\r\n\r\n    const init = () => {\r\n        getProfile(token).then(response=>{\r\n            console.log(response)\r\n            response.json().then(data => {\r\n                console.log({username: data.message.username,\r\n                    name: data.message.name,\r\n                    email: data.message.email,\r\n                    about: data.message.about})\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    username: data.message.username,\r\n                    name: data.message.name,\r\n                    email: data.message.email,\r\n                    about: data.message.about\r\n                });\r\n            }\r\n        })\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => e => {\r\n        // console.log(e.target.value);\r\n        const value = name === 'photo' ? e.target.files[0] : e.target.value;\r\n        let userFormData = new FormData();\r\n        userFormData.set(name, value);\r\n        setValues({ ...values, [name]: value, userData: userFormData, error: false, success: false });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, loading: true });\r\n        update(token, userData).then(response=>{\r\n            console.log(response)\r\n            response.json().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false, loading: false });\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        username: data.username,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        about: data.about,\r\n                        password: '',\r\n                        success: true,\r\n                        loading: false\r\n                    });\r\n                });\r\n            }\r\n        })\r\n        });\r\n    };\r\n    var localuname=loa\r\n    const profileUpdateForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-outline-info\">\r\n                    Profile photo\r\n                    <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Username</label>\r\n                <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">About</label>\r\n                <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" value={password} className=\"form-control\" />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-success\" style={{ display: success ? '' : 'none' }}>\r\n            Profile updated\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        <div className=\"alert alert-info\" style={{ display: loading ? '' : 'none' }}>\r\n            Loading...\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"content \">\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <img\r\n                            src={`${API}/user/photo/${username}`}\r\n                            className=\"img img-fluid img-thumbnail mb-3\"\r\n                            style={{ maxHeight: 'auto', maxWidth: '100%' }}\r\n                            alt=\"user profile\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-8 mb-5\">\r\n                        {showSuccess()}\r\n                        {showError()}\r\n                        {showLoading()}\r\n                        {profileUpdateForm()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileUpdate;"]},"metadata":{},"sourceType":"module"}