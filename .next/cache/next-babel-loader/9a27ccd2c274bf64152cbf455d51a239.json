{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport renderHTML from 'react-render-html';\nimport { useState, useEffect } from 'react';\nimport { listSearch } from '../../actions/blog';\n\nconst Search = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    search: undefined,\n    results: [],\n    searched: false,\n    message: ''\n  });\n  const {\n    search,\n    results,\n    searched,\n    message\n  } = values;\n\n  const searchSubmit = e => {\n    e.preventDefault();\n    listSearch({\n      search\n    }).then(data => {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        results: data,\n        searched: true,\n        message: `${data.length} blogs found`\n      }));\n    });\n  };\n\n  const handleChange = e => {\n    // console.log(e.target.value);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      search: e.target.value,\n      searched: false,\n      results: []\n    }));\n  };\n\n  const searchedBlogs = (results = []) => {\n    return __jsx(\"div\", {\n      className: \"jumbotron bg-white\"\n    }, message && __jsx(\"p\", {\n      className: \"pt-4 text-muted font-italic\"\n    }, message), results.map((blog, i) => {\n      return __jsx(\"div\", {\n        key: i\n      }, __jsx(Link, {\n        href: `/blogs/${blog.slug}`\n      }, __jsx(\"a\", {\n        className: \"text-primary\"\n      }, blog.title)));\n    }));\n  };\n\n  const searchForm = () => __jsx(\"form\", {\n    onSubmit: searchSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, __jsx(\"input\", {\n    type: \"search\",\n    className: \"form-control\",\n    placeholder: \"Search blogs\",\n    onChange: handleChange\n  })), __jsx(\"div\", {\n    className: \"col-md-4\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-block btn-outline-primary\",\n    type: \"submit\"\n  }, \"Search\"))));\n\n  return __jsx(\"div\", {\n    className: \"container-fluid\"\n  }, __jsx(\"div\", {\n    className: \"pt-3 pb-5\"\n  }, searchForm()), searched && __jsx(\"div\", {\n    style: {\n      marginTop: '-120px',\n      marginBottom: '-80px'\n    }\n  }, searchedBlogs(results)));\n};\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}