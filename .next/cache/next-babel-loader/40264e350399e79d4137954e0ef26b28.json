{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var create = function create(category, token) {\n  return fetch(\"\".concat(API, \"/category\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(category)\n  }).then(function (response) {\n    return response;\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\nexport var getCategories = function getCategories(token) {\n  return fetch(\"\".concat(API, \"/categories\"), {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    console.log(response);\n    return response;\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleCategory = function singleCategory(token, slug) {\n  return fetch(\"\".concat(API, \"/category/\").concat(slug), {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeCategory = function removeCategory(slug, token) {\n  return fetch(\"\".concat(API, \"/category/\").concat(slug), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response;\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/actions/category.js"],"names":["fetch","API","create","category","token","method","headers","Accept","Authorization","body","JSON","stringify","then","response","err","console","log","getCategories","singleCategory","slug","json","removeCategory"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,OAAO,IAAMC,MAAM,GAAC,SAAPA,MAAO,CAACC,QAAD,EAAUC,KAAV,EAAkB;AAClC,SAAOJ,KAAK,WAAIC,GAAJ,gBAAmB;AAC3BI,IAAAA,MAAM,EAAC,MADoB;AAE3BC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAe,kBAFX;AAGJC,MAAAA,aAAa,mBAAWJ,KAAX;AAHT,KAFmB;AAO3BK,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPsB,GAAnB,CAAL,CAQJS,IARI,CAQC,UAACC,QAAD,EAAY;AAEhB,WAAOA,QAAP;AACH,GAXM,WAWE,UAACC,GAAD,EAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAbM,CAAP;AAeH,CAhBM;AAkBP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACb,KAAD,EAAW;AACpC,SAAOJ,KAAK,WAAIC,GAAJ,kBAAsB;AAC9BI,IAAAA,MAAM,EAAE,KADsB;AAE9BC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAE,kBADJ;AAEJ,sBAAgB,kBAFZ;AAGJC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHT;AAFsB,GAAtB,CAAL,CAQFQ,IARE,CAQG,UAAAC,QAAQ,EAAI;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAOA,QAAP;AACH,GAXE,WAYI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAZP,CAAP;AAaH,CAdM;AAgBP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACd,KAAD,EAAOe,IAAP,EAAgB;AAC1C,SAAOnB,KAAK,WAAIC,GAAJ,uBAAoBkB,IAApB,GAA4B;AACpCd,IAAAA,MAAM,EAAE,KAD4B;AAEpCC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAE,kBADJ;AAEJ,sBAAgB,kBAFZ;AAGJC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHT;AAF4B,GAA5B,CAAL,CAQFQ,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACO,IAAT,EAAP;AACH,GAVE,WAWI,UAAAN,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAbM;AAeP,OAAO,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACF,IAAD,EAAOf,KAAP,EAAiB;AAC3C,SAAOJ,KAAK,WAAIC,GAAJ,uBAAoBkB,IAApB,GAA4B;AACpCd,IAAAA,MAAM,EAAE,QAD4B;AAEpCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHR;AAF2B,GAA5B,CAAL,CAQFQ,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {API} from '../config'\r\n\r\nexport const create=(category,token)=>{\r\n    return fetch(`${API}/category`,{\r\n        method:'POST',\r\n        headers:{\r\n            Accept:'application/json',\r\n            'Content-type':'application/json',\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body:JSON.stringify(category)\r\n    }).then((response)=>{\r\n        \r\n        return response\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n    \r\n}\r\n\r\nexport const getCategories = (token) => {\r\n    return fetch(`${API}/categories`, {\r\n        method: 'GET',\r\n        headers:{\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            console.log(response)\r\n            return response;\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const singleCategory = (token,slug) => {\r\n    return fetch(`${API}/category/${slug}`, {\r\n        method: 'GET',\r\n        headers:{\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeCategory = (slug, token) => {\r\n    return fetch(`${API}/category/${slug}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}