{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var create = function create(tag, token) {\n  return fetch(\"\".concat(API, \"/tag\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(tag)\n  }).then(function (response) {\n    return response;\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var getTags = function getTags(token) {\n  return fetch(\"\".concat(API, \"/tags\"), {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response;\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleTag = function singleTag(slug) {\n  return fetch(\"\".concat(API, \"/tag/\").concat(slug), {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeTag = function removeTag(slug, token) {\n  return fetch(\"\".concat(API, \"/tag/\").concat(slug), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response;\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/actions/tag.js"],"names":["fetch","API","create","tag","token","method","headers","Accept","Authorization","body","JSON","stringify","then","response","err","console","log","getTags","singleTag","slug","json","removeTag"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAClC,SAAOJ,KAAK,WAAIC,GAAJ,WAAe;AACvBI,IAAAA,MAAM,EAAE,MADe;AAEvBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHR,KAFc;AAOvBK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,GAAf;AAPiB,GAAf,CAAL,CASFS,IATE,CASG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAP;AACH,GAXE,WAYI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAZP,CAAP;AAaH,CAdM;AAgBP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACb,KAAD,EAAW;AAC9B,SAAOJ,KAAK,WAAIC,GAAJ,YAAgB;AACxBI,IAAAA,MAAM,EAAE,KADgB;AAExBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHR;AAFe,GAAhB,CAAL,CAQFQ,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAbM;AAeP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AAC/B,SAAOnB,KAAK,WAAIC,GAAJ,kBAAekB,IAAf,GAAuB;AAC/Bd,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX;AAFsB,GAAvB,CAAL,CAOFK,IAPE,CAOG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACO,IAAT,EAAP;AACH,GATE,WAUI,UAAAN,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAVP,CAAP;AAWH,CAZM;AAcP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACF,IAAD,EAAOf,KAAP,EAAiB;AACtC,SAAOJ,KAAK,WAAIC,GAAJ,kBAAekB,IAAf,GAAuB;AAC/Bd,IAAAA,MAAM,EAAE,QADuB;AAE/BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYJ,KAAZ;AAHR;AAFsB,GAAvB,CAAL,CAQFQ,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const create = (tag, token) => {\r\n    return fetch(`${API}/tag`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(tag)\r\n    })\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getTags = (token) => {\r\n    return fetch(`${API}/tags`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const singleTag = (slug) => {\r\n    return fetch(`${API}/tag/${slug}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeTag = (slug, token) => {\r\n    return fetch(`${API}/tag/${slug}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}