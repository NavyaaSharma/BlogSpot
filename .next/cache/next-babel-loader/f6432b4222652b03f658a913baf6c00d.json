{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\nimport { API } from '../../config';\nimport '../../static/css/style.css';\nvar localuname = \"\";\n\nif (false) {\n  if (localStorage.getItem('user')) {\n    let auth = JSON.parse(localStorage.getItem('user'));\n    localuname = auth.username;\n    console.log(localuname);\n  }\n}\n\nconsole.log(localuname);\n\nconst ProfileUpdate = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    username: '',\n    name: '',\n    email: '',\n    about: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: ''\n  });\n  const token = getCookie('token');\n  const {\n    username,\n    name,\n    email,\n    about,\n    password,\n    error,\n    success,\n    loading,\n    photo,\n    userData\n  } = values;\n\n  const init = () => {\n    getProfile(token).then(response => {\n      console.log(response);\n      response.json().then(data => {\n        console.log({\n          username: data.message.username,\n          name: data.message.name,\n          email: data.message.email,\n          about: data.message.about\n        });\n\n        if (data.error) {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            error: data.error\n          }));\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            username: data.message.username,\n            name: data.message.name,\n            email: data.message.email,\n            about: data.message.about\n          }));\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const handleChange = name => e => {\n    // console.log(e.target.value);\n    const value = name === 'photo' ? e.target.files[0] : e.target.value;\n    let userFormData = new FormData();\n    userFormData.set(name, value);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value,\n      userData: userFormData,\n      error: false,\n      success: false\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    update(token, userData).then(response => {\n      console.log(response);\n      response.json().then(data => {\n        if (data.error) {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            error: data.error,\n            success: false,\n            loading: false\n          }));\n        } else {\n          updateUser(data, () => {\n            setValues(_objectSpread(_objectSpread({}, values), {}, {\n              username: data.username,\n              name: data.name,\n              email: data.email,\n              about: data.about,\n              password: '',\n              success: true,\n              loading: false\n            }));\n          });\n        }\n      });\n    });\n  };\n\n  const profileUpdateForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"btn btn-outline-info\"\n  }, \"Profile photo\", __jsx(\"input\", {\n    onChange: handleChange('photo'),\n    type: \"file\",\n    accept: \"image/*\",\n    hidden: true\n  }))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted\"\n  }, \"Username\"), __jsx(\"input\", {\n    onChange: handleChange('username'),\n    type: \"text\",\n    value: username,\n    className: \"form-control\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted\"\n  }, \"Name\"), __jsx(\"input\", {\n    onChange: handleChange('name'),\n    type: \"text\",\n    value: name,\n    className: \"form-control\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted\"\n  }, \"Email\"), __jsx(\"input\", {\n    onChange: handleChange('email'),\n    type: \"text\",\n    value: email,\n    className: \"form-control\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted\"\n  }, \"About\"), __jsx(\"textarea\", {\n    onChange: handleChange('about'),\n    type: \"text\",\n    value: about,\n    className: \"form-control\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted\"\n  }, \"Password\"), __jsx(\"input\", {\n    onChange: handleChange('password'),\n    type: \"password\",\n    value: password,\n    className: \"form-control\"\n  })), __jsx(\"div\", null, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\"\n  }, \"Submit\")));\n\n  const showError = () => __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    }\n  }, error);\n\n  const showSuccess = () => __jsx(\"div\", {\n    className: \"alert alert-success\",\n    style: {\n      display: success ? '' : 'none'\n    }\n  }, \"Profile updated\");\n\n  const showLoading = () => __jsx(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: loading ? '' : 'none'\n    }\n  }, \"Loading...\");\n\n  return __jsx(\"div\", {\n    className: \"content \"\n  }, __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-4\"\n  }, __jsx(\"img\", {\n    src: `${API}/user/photo/${username}`,\n    className: \"img img-fluid img-thumbnail mb-3\",\n    style: {\n      maxHeight: 'auto',\n      maxWidth: '100%'\n    },\n    alt: \"user profile\"\n  })), __jsx(\"div\", {\n    className: \"col-md-8 mb-5\"\n  }, showSuccess(), showError(), showLoading(), profileUpdateForm())))));\n};\n\nexport default ProfileUpdate;","map":null,"metadata":{},"sourceType":"module"}