{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Navyaa Sharma\\\\Documents\\\\MyProjects\\\\seo blog\\\\frontend\\\\components\\\\crud\\\\category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { isAuth, getCookie } from '../../actions/auth';\nimport Link from 'next/link';\nimport { create, getCategories, removeCategory } from '../../actions/category';\n\nconst Category = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: '',\n    reload: false\n  });\n  const {\n    name,\n    error,\n    success,\n    categories,\n    removed,\n    reload\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    loadCategories();\n  }, [reload]);\n\n  const loadCategories = () => {\n    getCategories().then(result => {\n      console.log(result);\n      result.json().then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            categories: data\n          }));\n        }\n      });\n    });\n  };\n\n  const showCategories = () => {\n    return categories.map((c, i) => {\n      return __jsx(\"button\", {\n        onDoubleClick: () => deleteConfirm(c.slug),\n        title: \"Double click to delete\",\n        key: i,\n        className: \"btn btn-outline-primary mr-1 ml-1 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, c.name);\n    });\n  };\n\n  const deleteConfirm = slug => {\n    let answer = window.confirm('Are you sure you want to delete this category?');\n\n    if (answer) {\n      deleteCategory(slug);\n    }\n  };\n\n  const deleteCategory = slug => {\n    // console.log('delete', slug);\n    removeCategory(slug, token).then(result => {\n      console.log(result);\n      result.json().then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            error: false,\n            success: false,\n            name: '',\n            removed: !removed,\n            reload: !reload\n          }));\n        }\n      });\n    });\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    create({\n      name\n    }, token).then(result => {\n      console.log(result);\n      result.json().then(data => {\n        if (data.error) {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            error: data.error,\n            success: false\n          }));\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            name: '',\n            error: false,\n            success: true,\n            removed: !removed,\n            reload: !reload\n          }));\n        }\n      });\n    });\n  };\n\n  const handleChange = e => {\n    setValues(...values, {\n      name: e.target.value,\n      error: false,\n      success: false,\n      removed: ''\n    });\n  };\n\n  const showSuccess = () => {\n    if (success) {\n      return __jsx(\"p\", {\n        className: \"text-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }\n      }, \"Category is created\");\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return __jsx(\"p\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }\n      }, \"Category already exist\");\n    }\n  };\n\n  const showRemoved = () => {\n    if (removed) {\n      return __jsx(\"p\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 20\n        }\n      }, \"Category is removed\");\n    }\n  };\n\n  const mouseMoveHandler = e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  const newCategoryForm = () => {\n    __jsx(\"form\", {\n      onSubmit: clickSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-mutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Name Of Category\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleChange,\n      value: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"create\")));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, showSuccess(), showError(), showRemoved(), __jsx(\"div\", {\n    onMouseMove: mouseMoveHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, newCategoryForm(), showCategories()));\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/components/crud/category.js"],"names":["useState","useEffect","Router","isAuth","getCookie","Link","create","getCategories","removeCategory","Category","values","setValues","name","error","success","categories","removed","reload","token","loadCategories","then","result","console","log","json","data","showCategories","map","c","i","deleteConfirm","slug","answer","window","confirm","deleteCategory","clickSubmit","e","preventDefault","handleChange","target","value","showSuccess","showError","showRemoved","mouseMoveHandler","newCategoryForm"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport Router from 'next/router'\r\nimport {isAuth, getCookie} from '../../actions/auth'\r\nimport Link from 'next/link'\r\nimport { create, getCategories, removeCategory } from '../../actions/category';\r\n\r\nconst Category=()=>{\r\n    const [values,setValues]=useState({\r\n        name:'',\r\n        error:false,\r\n        success:false,\r\n        categories:[],\r\n        removed:'',\r\n        reload:false\r\n    })\r\n\r\n    const {name,error,success,categories,removed,reload}=values\r\n    const  token=getCookie('token')\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, [reload]);\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then((result)=>{\r\n            console.log(result)\r\n            result.json().then((data)=> {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setValues({ ...values, categories: data });\r\n            }\r\n        });\r\n    })\r\n    };\r\n\r\n    const showCategories = () => {\r\n        return categories.map((c, i) => {\r\n            return (\r\n                <button\r\n                    onDoubleClick={() => deleteConfirm(c.slug)}\r\n                    title=\"Double click to delete\"\r\n                    key={i}\r\n                    className=\"btn btn-outline-primary mr-1 ml-1 mt-3\"\r\n                >\r\n                    {c.name}\r\n                </button>\r\n            );\r\n        });\r\n    };\r\n\r\n    const deleteConfirm = slug => {\r\n        let answer = window.confirm('Are you sure you want to delete this category?');\r\n        if (answer) {\r\n            deleteCategory(slug);\r\n        }\r\n    };\r\n\r\n    const deleteCategory = slug => {\r\n        // console.log('delete', slug);\r\n        removeCategory(slug, token).then((result)=>{\r\n            console.log(result)\r\n            result.json().then((data) => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setValues({ ...values, error: false, success: false, name: '', removed: !removed, reload: !reload });\r\n            }\r\n        });\r\n    })\r\n    };\r\n\r\n    const clickSubmit=(e)=>{\r\n        e.preventDefault()\r\n        create({name},token).then((result)=>{\r\n            console.log(result)\r\n            result.json().then((data)=>{\r\n            if(data.error)\r\n            {\r\n                setValues({ ...values,error:data.error,success:false})\r\n            }\r\n            else{\r\n                setValues({...values,name:'',error:false,success:true,removed: !removed, reload: !reload})\r\n            }\r\n            })\r\n        })\r\n    }\r\n    const handleChange=(e)=>{\r\n        setValues(...values,{name:e.target.value,error:false,success:false,removed:''})\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <p className=\"text-success\">Category is created</p>;\r\n        }\r\n    };\r\n\r\n    const showError = () => {\r\n        if (error) {\r\n            return <p className=\"text-danger\">Category already exist</p>;\r\n        }\r\n    };\r\n\r\n    const showRemoved = () => {\r\n        if (removed) {\r\n            return <p className=\"text-danger\">Category is removed</p>;\r\n        }\r\n    };\r\n\r\n    const mouseMoveHandler = e => {\r\n        setValues({ ...values, error: false, success: false, removed: '' });\r\n    };\r\n    \r\n    const newCategoryForm=()=>{\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-mutes\">Name Of Category</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name}></input>\r\n                <button type=\"submit\" className=\"btn btn-primary\">create</button>\r\n            </div>\r\n        </form>\r\n    }\r\n\r\nreturn( <React.Fragment>\r\n     {showSuccess()}\r\n            {showError()}\r\n            {showRemoved()}\r\n            <div onMouseMove={mouseMoveHandler}>\r\n                {newCategoryForm()}\r\n                {showCategories()}\r\n            </div>\r\n    </React.Fragment>)\r\n}   \r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}