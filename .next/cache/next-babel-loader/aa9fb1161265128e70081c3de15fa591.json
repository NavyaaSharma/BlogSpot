{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport queryString from 'query-string';\nimport { isAuth, handleResponse } from './auth';\nexport var createBlog = function createBlog(blog, token) {\n  var createBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    createBlogEndpoint = \"\".concat(API, \"/blog\");\n  } else if (isAuth() && isAuth().role === 0) {\n    createBlogEndpoint = \"\".concat(API, \"/user/blog\");\n  }\n\n  return fetch(\"\".concat(createBlogEndpoint), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (result) {\n    return result.json();\n  });\n};\nexport var singleBlog = function singleBlog(slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listRelated = function listRelated(blog) {\n  return fetch(\"\".concat(API, \"/blogs/related\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var list = function list(username) {\n  var listBlogsEndpoint;\n\n  if (username) {\n    listBlogsEndpoint = \"\".concat(API, \"/\").concat(username, \"/blogs\");\n  } else {\n    listBlogsEndpoint = \"\".concat(API, \"/blogs\");\n  }\n\n  return fetch(\"\".concat(listBlogsEndpoint), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeBlog = function removeBlog(slug, token) {\n  var deleteBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    deleteBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    deleteBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(deleteBlogEndpoint), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateBlog = function updateBlog(blog, token, slug) {\n  var updateBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    updateBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    updateBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(updateBlogEndpoint), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listSearch = function listSearch(params) {\n  console.log('search params', params);\n  var query = queryString.stringify(params);\n  console.log('query params', query);\n  return fetch(\"\".concat(API, \"/blogs/search?\").concat(query), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var publish = function publish(slug, token) {\n  return fetch(\"\".concat(API, \"/blog/publish/\").concat(slug), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    console.log(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/actions/blog.js"],"names":["fetch","API","queryString","isAuth","handleResponse","createBlog","blog","token","createBlogEndpoint","role","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","JSON","stringify","result","singleBlog","slug","listRelated","list","username","listBlogsEndpoint","removeBlog","deleteBlogEndpoint","updateBlog","updateBlogEndpoint","listSearch","params","query","publish"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {API} from '../config'\r\nimport queryString from 'query-string';\r\nimport { isAuth, handleResponse } from './auth';\r\n\r\nexport const createBlog=(blog,token)=>{\r\n    let createBlogEndpoint;\r\n\r\n    if (isAuth() && isAuth().role === 1) {\r\n        createBlogEndpoint = `${API}/blog`;\r\n    } else if (isAuth() && isAuth().role === 0) {\r\n        createBlogEndpoint = `${API}/user/blog`;\r\n    }\r\n    return fetch(`${createBlogEndpoint}`,{\r\n        method:'POST',\r\n        headers:{\r\n            Accept:'application/json',\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body:blog\r\n    }).then((response)=>{\r\n        \r\n        return response.json()\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n    \r\n}\r\n\r\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\r\n    const data = {\r\n        limit,\r\n        skip\r\n    };\r\n    return fetch(`${API}/blogs-categories-tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    .then(result=>{\r\n            return result.json() })\r\n};\r\n\r\nexport const singleBlog = slug => {\r\n    return fetch(`${API}/blog/${slug}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = blog => {\r\n    return fetch(`${API}/blogs/related`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(blog)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const list = (username) => {\r\n    let listBlogsEndpoint;\r\n    if (username) {\r\n        listBlogsEndpoint = `${API}/${username}/blogs`;\r\n    } else {\r\n        listBlogsEndpoint = `${API}/blogs`;\r\n    }\r\n    return fetch(`${listBlogsEndpoint}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeBlog = (slug, token) => {\r\n    let deleteBlogEndpoint;\r\n\r\n    if (isAuth() && isAuth().role === 1) {\r\n        deleteBlogEndpoint = `${API}/blog/${slug}`;\r\n    } else if (isAuth() && isAuth().role === 0) {\r\n        deleteBlogEndpoint = `${API}/user/blog/${slug}`;\r\n    }\r\n    return fetch(`${deleteBlogEndpoint}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateBlog = (blog, token, slug) => {\r\n    let updateBlogEndpoint;\r\n\r\n    if (isAuth() && isAuth().role === 1) {\r\n        updateBlogEndpoint = `${API}/blog/${slug}`;\r\n    } else if (isAuth() && isAuth().role === 0) {\r\n        updateBlogEndpoint = `${API}/user/blog/${slug}`;\r\n    }\r\n    return fetch(`${updateBlogEndpoint}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: blog\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listSearch = params => {\r\n    console.log('search params', params);\r\n    let query = queryString.stringify(params);\r\n    console.log('query params', query);\r\n    return fetch(`${API}/blogs/search?${query}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const publish = (slug,token) => {\r\n\r\n    return fetch(`${API}/blog/publish/${slug}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            console.log(response)\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}