{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Navyaa Sharma\\\\Documents\\\\MyProjects\\\\seo blog\\\\frontend\\\\components\\\\crud\\\\BlogList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\n\nvar BlogRead = function BlogRead(_ref) {\n  _s();\n\n  var username = _ref.username;\n\n  var _useState = useState([]),\n      blogs = _useState[0],\n      setBlogs = _useState[1];\n\n  var token = getCookie('token');\n  useEffect(function () {\n    loadBlogs();\n  }, []);\n\n  var loadBlogs = function loadBlogs() {\n    list(username).then(function (data) {\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setBlogs(data);\n      }\n    });\n  };\n\n  var showAllBlogs = function showAllBlogs() {\n    return blogs.map(function (blog, i) {\n      var check = \"\";\n\n      if (blog.isPublished == false) {\n        return __jsx(\"div\", {\n          key: i,\n          className: \"pb-5\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, __jsx(\"h3\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }\n        }, blog.title), __jsx(\"p\", {\n          className: \"mark\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }\n        }, \"Written by \", blog.postedBy.name, \" | \", check));\n      } else check = \"Published on \" + moment(blog.updatedAt).fromNow();\n\n      return __jsx(\"div\", {\n        key: i,\n        className: \"pb-5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, __jsx(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, blog.title), __jsx(\"p\", {\n        className: \"mark\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"Written by \", blog.postedBy.name, \" | \", check));\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, showAllBlogs())));\n};\n\n_s(BlogRead, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n\n_c = BlogRead;\nexport default BlogRead;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogRead\");","map":{"version":3,"sources":["C:/Users/Navyaa Sharma/Documents/MyProjects/seo blog/frontend/components/crud/BlogList.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","list","removeBlog","moment","BlogRead","username","blogs","setBlogs","token","loadBlogs","then","data","console","log","error","showAllBlogs","map","blog","i","check","isPublished","title","postedBy","name","updatedAt","fromNow"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,oBAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACLT,QAAQ,CAAC,EAAD,CADH;AAAA,MACxBU,KADwB;AAAA,MACjBC,QADiB;;AAE/B,MAAMC,KAAK,GAAGT,SAAS,CAAC,OAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBR,IAAAA,IAAI,CAACI,QAAD,CAAJ,CAAeK,IAAf,CAAoB,UAAAC,IAAI,EAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAACG,KAAT,EAAgB;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACH,OAFD,MAEO;AACHP,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACH;AACJ,KAPD;AAQH,GATD;;AAYA,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,WAAOT,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC1B,UAAIC,KAAK,GAAC,EAAV;;AACA,UAAGF,IAAI,CAACG,WAAL,IAAkB,KAArB,EACA;AAEI,eACI;AAAK,UAAA,GAAG,EAAEF,CAAV;AAAa,UAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACI,KAAV,CADJ,EAEI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgBJ,IAAI,CAACK,QAAL,CAAcC,IAD9B,SACuCJ,KADvC,CAFJ,CADJ;AAQH,OAXD,MAaIA,KAAK,GAAC,kBAAgBhB,MAAM,CAACc,IAAI,CAACO,SAAN,CAAN,CAAuBC,OAAvB,EAAtB;;AACJ,aACI;AAAK,QAAA,GAAG,EAAEP,CAAV;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACI,KAAV,CADJ,EAEI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgBJ,IAAI,CAACK,QAAL,CAAcC,IAD9B,SACuCJ,KADvC,CAFJ,CADJ;AAQH,KAxBM,CAAP;AAyBH,GA1BD;;AA4BA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YAAY,EADjB,CADJ,CADJ,CADJ;AASH,CAzDD;;GAAMX,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport { getCookie, isAuth } from '../../actions/auth';\r\nimport { list, removeBlog } from '../../actions/blog';\r\nimport moment from 'moment';\r\n\r\nconst BlogRead = ({ username }) => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadBlogs();\r\n    }, []);\r\n\r\n    const loadBlogs = () => {\r\n        list(username).then(data => {\r\n            console.log(data)\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setBlogs(data);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const showAllBlogs = () => {\r\n        return blogs.map((blog, i) => {\r\n            var check=\"\"\r\n            if(blog.isPublished==false)\r\n            {\r\n\r\n                return (\r\n                    <div key={i} className=\"pb-5\">\r\n                        <h3>{blog.title}</h3>\r\n                        <p className=\"mark\">\r\n                            Written by {blog.postedBy.name} | {check}\r\n                        </p>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n                check=\"Published on \"+moment(blog.updatedAt).fromNow()\r\n            return (\r\n                <div key={i} className=\"pb-5\">\r\n                    <h3>{blog.title}</h3>\r\n                    <p className=\"mark\">\r\n                        Written by {blog.postedBy.name} | {check}\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    {showAllBlogs()}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default BlogRead;"]},"metadata":{},"sourceType":"module"}