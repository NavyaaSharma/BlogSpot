{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { emailContactForm } from '../../actions/form';\n\nconst ContactForm = ({\n  authorEmail\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    message: '',\n    name: '',\n    email: '',\n    sent: false,\n    buttonText: 'Send Message',\n    success: false,\n    error: false\n  });\n  const {\n    message,\n    name,\n    email,\n    sent,\n    buttonText,\n    success,\n    error\n  } = values;\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      buttonText: 'Sending...'\n    }));\n    emailContactForm({\n      authorEmail,\n      name,\n      email,\n      message\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          sent: true,\n          name: '',\n          email: '',\n          message: '',\n          buttonText: 'Sent',\n          success: data.success\n        }));\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value,\n      error: false,\n      success: false,\n      buttonText: 'Send Message'\n    }));\n  };\n\n  const showSuccessMessage = () => success && __jsx(\"div\", {\n    className: \"alert alert-info\"\n  }, \"Thank you for contacting us.\");\n\n  const showErrorMessage = () => __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    }\n  }, error);\n\n  const contactForm = () => {\n    return __jsx(\"form\", {\n      onSubmit: clickSubmit,\n      className: \"pb-5\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"lead\"\n    }, \"Message\"), __jsx(\"textarea\", {\n      onChange: handleChange('message'),\n      type: \"text\",\n      className: \"form-control\",\n      value: message,\n      required: true,\n      rows: \"5\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"lead\"\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      onChange: handleChange('name'),\n      className: \"form-control\",\n      value: name,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"lead\"\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      onChange: handleChange('email'),\n      className: \"form-control\",\n      value: email,\n      required: true\n    })), __jsx(\"div\", null, __jsx(\"button\", {\n      className: \"btn btn-primary btn-block\"\n    }, buttonText)));\n  };\n\n  return __jsx(React.Fragment, null, showSuccessMessage(), showErrorMessage(), contactForm());\n};\n\nexport default ContactForm;","map":null,"metadata":{},"sourceType":"module"}