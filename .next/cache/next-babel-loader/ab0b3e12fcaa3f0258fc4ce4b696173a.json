{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\n\nconst BlogRead = ({\n  username\n}) => {\n  const {\n    0: blogs,\n    1: setBlogs\n  } = useState([]);\n  const token = getCookie('token');\n  useEffect(() => {\n    loadBlogs();\n  }, []);\n\n  const loadBlogs = () => {\n    list(username).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setBlogs(data);\n      }\n    });\n  };\n\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => {\n      var check = \"\";\n\n      if (blog.isPublished == false) {\n        check = \"Blog will be published after the admin reviews and publishes it\";\n        return __jsx(\"div\", {\n          key: i,\n          className: \"pb-5\"\n        }, __jsx(\"h3\", null, blog.title), __jsx(\"p\", {\n          className: \"mark\"\n        }, \"Written by \", __jsx(\"a\", {\n          href: `/profile/${blog.postedBy.username}`\n        }, blog.postedBy.name), \" | \", check));\n      } else {\n        check = \"Published on \" + moment(blog.updatedAt).fromNow();\n        return __jsx(\"div\", {\n          key: i,\n          className: \"pb-5\"\n        }, __jsx(\"h3\", null, __jsx(\"a\", {\n          href: `/blogs/${blog.slug}`\n        }, blog.title)), __jsx(\"p\", {\n          className: \"mark\"\n        }, \"Written by \", __jsx(\"a\", {\n          href: `/profile/${blog.postedBy.username}`\n        }, blog.postedBy.name), \" | \", check));\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, showAllBlogs())));\n};\n\nexport default BlogRead;","map":null,"metadata":{},"sourceType":"module"}